{"ast":null,"code":"var _jsxFileName = \"/Users/duinweb/Documents/webs/rickandmorty/src/pages/episode/list.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EpisodeList() {\n  _s();\n  const {\n    id\n  } = useParams(); // Obtén la 'id' dinámica desde la URL\n\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    // Utiliza la 'id' en la solicitud a la API\n    fetch(`https://rickandmortyapi.com/api/episode/${id}`).then(response => response.json()).then(data => {\n      setResults(data); // Actualiza los resultados del personaje\n    }).catch(error => console.log(error));\n  }, [id]); // Asegúrate de incluir 'id' como dependencia\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"characterTable\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"ficha\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 12,\n        lg: 6,\n        className: \"ficha\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"titlePrincipalFicha\",\n          children: results.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 12,\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fichaRight\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"titleFicha\",\n            children: \"Air date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: results.air_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"titleFicha\",\n            children: \"Episode:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: results.episode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 1\n  }, this);\n}\n_s(EpisodeList, \"GQpsxUAS8hhQhQ/4P8banK0/TrM=\", false, function () {\n  return [useParams];\n});\n_c = EpisodeList;\nexport default EpisodeList;\nvar _c;\n$RefreshReg$(_c, \"EpisodeList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Row","Col","jsxDEV","_jsxDEV","EpisodeList","_s","id","results","setResults","fetch","then","response","json","data","catch","error","console","log","className","children","xs","md","lg","name","fileName","_jsxFileName","lineNumber","columnNumber","air_date","episode","_c","$RefreshReg$"],"sources":["/Users/duinweb/Documents/webs/rickandmorty/src/pages/episode/list.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {Row, Col} from 'react-bootstrap';\n\n\n\n\nfunction EpisodeList() {\n\n    const { id } = useParams(); // Obtén la 'id' dinámica desde la URL\n\nconst [results, setResults] = useState([]);\n\nuseEffect(() => {\n  // Utiliza la 'id' en la solicitud a la API\n  fetch(`https://rickandmortyapi.com/api/episode/${id}`)\n    .then((response) => response.json())\n    .then((data) => {\n      setResults(data); // Actualiza los resultados del personaje\n    })\n    .catch((error) => console.log(error));\n}, [id]); // Asegúrate de incluir 'id' como dependencia\n\n\n    return(\n        \n<div className=\"characterTable\">\n        <Row className=\"ficha\">  \n            <Col xs={12} md={12} lg={6} className=\"ficha\">\n            <p className=\"titlePrincipalFicha\">{results.name}</p>\n            </Col>\n            <Col xs={12} md={12} lg={6}>\n\n                <div className=\"fichaRight\">\n        \n                    <p className=\"titleFicha\">Air date:</p>\n                    <p>{results.air_date}</p>\n                    <p className=\"titleFicha\">Episode:</p>\n                    <p>{results.episode}</p>\n                  \n\n                </div>\n            \n            </Col>\n\n\n        </Row>\n        <Col>\n\n        </Col>\n        <Col>\n        </Col>\n        <Row>\n\n\n        </Row>\n         \n\n        </div>\n    )\n}\n\nexport default EpisodeList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}