{"ast":null,"code":"var _jsxFileName = \"/Users/duinweb/Documents/webs/rickandmorty/src/pages/episode/list.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EpisodeList() {\n  _s();\n  const {\n    id\n  } = useParams(); // Obtén la 'id' dinámica desde la URL\n\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    // Utiliza la 'id' en la solicitud a la API\n    fetch(`https://rickandmortyapi.com/api/episode/${id}`).then(response => response.json()).then(data => {\n      setResults(data); // Actualiza los resultados del personaje\n    }).catch(error => console.log(error));\n  }, [id]); // Asegúrate de incluir 'id' como dependencia\n\n  const residents = results.residents;\n  const characterImageElements = [];\n  if (results.residents) {\n    residents.forEach(residentURL => {\n      const parts = residentURL.split('/');\n      const characterId = parts[parts.length - 1];\n      const characterImageUrl = `https://rickandmortyapi.com/api/character/avatar/${characterId}.jpeg`;\n      const imgElement = /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `/character/${characterId}`,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: characterImageUrl,\n          alt: `Character ${characterId}`\n        }, characterId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 62\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 24\n      }, this);\n      characterImageElements.push(imgElement);\n    });\n  } else {\n    console.log(\"No hay residentes\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"characterTable\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"ficha\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 12,\n        lg: 6,\n        className: \"ficha\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"titlePrincipalFicha\",\n          children: results.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 12,\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fichaRight\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"titleFicha\",\n            children: \"Air date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: results.air_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"titleFicha\",\n            children: \"Episode:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: results.episode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"feedLocation\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"titlePrincipalFicha\",\n        children: \"Characters of location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), characterImageElements.map((imgElement, index) => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 6,\n        md: 3,\n        lg: 3,\n        children: imgElement\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 1\n  }, this);\n}\n_s(EpisodeList, \"GQpsxUAS8hhQhQ/4P8banK0/TrM=\", false, function () {\n  return [useParams];\n});\n_c = EpisodeList;\nexport default EpisodeList;\nvar _c;\n$RefreshReg$(_c, \"EpisodeList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Row","Col","jsxDEV","_jsxDEV","EpisodeList","_s","id","results","setResults","fetch","then","response","json","data","catch","error","console","log","residents","characterImageElements","forEach","residentURL","parts","split","characterId","length","characterImageUrl","imgElement","href","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","push","className","xs","md","lg","name","air_date","episode","map","index","_c","$RefreshReg$"],"sources":["/Users/duinweb/Documents/webs/rickandmorty/src/pages/episode/list.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {Row, Col} from 'react-bootstrap';\n\n\n\n\nfunction EpisodeList() {\n\n    const { id } = useParams(); // Obtén la 'id' dinámica desde la URL\n\nconst [results, setResults] = useState([]);\n\nuseEffect(() => {\n  // Utiliza la 'id' en la solicitud a la API\n  fetch(`https://rickandmortyapi.com/api/episode/${id}`)\n    .then((response) => response.json())\n    .then((data) => {\n      setResults(data); // Actualiza los resultados del personaje\n    })\n    .catch((error) => console.log(error));\n}, [id]); // Asegúrate de incluir 'id' como dependencia\n\nconst residents = results.residents;\n\nconst characterImageElements = [];\n\n\nif (results.residents) {\n\n\n\nresidents.forEach((residentURL) => {\n    const parts = residentURL.split('/');\n    const characterId = parts[parts.length - 1];\n    const characterImageUrl = `https://rickandmortyapi.com/api/character/avatar/${characterId}.jpeg`;\n  \n    const imgElement = <a href={`/character/${characterId}`}><img key={characterId} src={characterImageUrl} alt={`Character ${characterId}`} /></a>;\n    characterImageElements.push(imgElement);\n  }); } else {\n      console.log(\"No hay residentes\")\n  }\n\n\n\n    return(\n        \n<div className=\"characterTable\">\n        <Row className=\"ficha\">  \n            <Col xs={12} md={12} lg={6} className=\"ficha\">\n            <p className=\"titlePrincipalFicha\">{results.name}</p>\n            </Col>\n            <Col xs={12} md={12} lg={6}>\n\n                <div className=\"fichaRight\">\n        \n                    <p className=\"titleFicha\">Air date:</p>\n                    <p>{results.air_date}</p>\n                    <p className=\"titleFicha\">Episode:</p>\n                    <p>{results.episode}</p>\n                  \n\n                </div>\n            \n            </Col>\n\n\n        </Row>\n\n\n        <Row className=\"feedLocation\">\n                <h1 className=\"titlePrincipalFicha\">Characters of location</h1>\n                {characterImageElements.map((imgElement, index) => (\n                <Col key={index} xs={6} md={3} lg={3}>\n                {imgElement}\n                </Col>\n      ))}\n\n        </Row>\n         \n\n        </div>\n    )\n}\n\nexport default EpisodeList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}